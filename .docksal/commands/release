#!/usr/bin/env bash

## Make a new release and deploys it.
##
## Usage: fin release

# Abort if anything fails
set -e

# Backup the environments.
fin terminus backup:create ${hostingplatform}.dev --keep-for=365
fin terminus backup:create ${hostingplatform}.test --keep-for=365
fin terminus backup:create ${hostingplatform}.live --keep-for=365

# Grab the live db.
fin pull db -y --hosting-env=live

# @TODO Need an IF statement here if there is any changes.
# =================================================================

# Make a new branch.
git checkout -b feature/live-config

# Export and commit config.
fin drush config:export -y --commit --message="Automated configuration capture from live database"

# Push and create a PR.
git push origin
gh pr create --title "Configuration from live site." --body "Automatically generated pull request from the live site configurations."

# Merge the pull request.
gh pr merge

# Delete the branch.
git branch -D feature/live-config

# @TODO Else (We always want to do this).
# =================================================================

# Create a new tag
var_release_previous=$(gh release view)
if [ -z "$var_release_previous" ]; then
    var_tag_new=0.0.1
else
    var_tag_new=$(git describe --tags --abbrev=0 | awk -F. '{OFS="."; $NF+=1; print $0}')
fi

echo -e "Creating a new tag."
git tag -a $var_tag_new -m "Autogenerated deployment release tag"

echo -e "Push new tag."
git push origin $var_tag_new

echo -e "Create new release"
gh release create $var_tag_new --generate-notes

# Get the release notes, URL, and Name.
var_release_notes=$(gh release view $var_tag_new --json body --jq .body | cat)
var_release_url=$(gh release view $var_tag_new --json url --jq .url | cat)
var_release_tag=$(gh release view $var_tag_new --json tagName --jq .tagName | cat)

# Deploy to Test
# fin terminus env:deploy --sync-content --note $var_tag_new --cc --updatedb -- ${hostingplatform}.test

# Deploy to Live
# fin terminus env:deploy --note $var_tag_new --cc --updatedb -- ${hostingplatform}.live

# Post release notes and release URL to Slack.
# @TODO Print these variable Title: $var_release_tag Body: $var_release_notes Link: $var_release_url, 
# @TODO actually post it.

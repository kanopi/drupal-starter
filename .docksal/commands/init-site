#!/usr/bin/env bash

#: exec_target = cli

## Initialize/reinstall site
##
## Usage: fin init-site

# Abort if anything fails
set -e

#-------------------------- Helper functions ------------------------------

# Copy a settings file.
# Skips if the destination file already exists.
# @param $1 source file
# @param $2 destination file
copy_settings_file()
{
  local source="$1"
  local dest="$2"

  echo "Copying ${dest}..."
  cp -f $source $dest
}

green='\033[0;32m'
yellow='\033[1;33m'
NC='\033[0m'

divider='===================================================\n'
check='\xE2\x9C\x85'
construction='\xF0\x9F\x9A\xA7'
crossmark='\xE2\x9D\x8C'
hospital='\xF0\x9F\x8F\xA5'
party='\xF0\x9F\x8E\x88 \xF0\x9F\x8E\x89 \xF0\x9F\x8E\x8A'
reverseparty='\xF0\x9F\x8E\x8A \xF0\x9F\x8E\x89 \xF0\x9F\x8E\x88'
rocket='\xF0\x9F\x9A\x80'
silhouette='\xF0\x9F\x91\xA4'
lightning='\xE2\x9A\xA1'
drop='\xF0\x9F\x92\xA7'
shark='\xF0\x9F\xA6\x88'
gear='\xEF\xB8\x8F'

#-------------------------- Settings --------------------------------------

# PROJECT_ROOT and DOCROOT are set as env variables in cli
SITE_DIRECTORY="default"
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"

#-------------------------- Functions -------------------------------------

# Initialize local settings files
init_code () {
  echo -e "\n${yellow} ${construction} Composer install. ${construction}${NC}"
  echo -e "${green}${divider}${NC}"
  cd ${PROJECT_ROOT};
  composer install
}

# Fix file/folder permissions
fix_permissions () {
  echo -e "\n${yellow} ${construction} Making file directories writable. ${construction}${NC}"
  echo -e "${green}${divider}${NC}"
  mkdir -p "${SITEDIR_PATH}/files/private"
  chmod 755 "${SITEDIR_PATH}"
  chmod 755 "${SITEDIR_PATH}/files/private"
}

# Initialize local settings files
init_settings () {
  echo -e "${yellow} ${construction} Copy settings files for local development. ${construction}${NC}"
  echo -e "${green}${divider}${NC}"
  ln -sf "${PROJECT_ROOT}/.docksal/etc/conf/settings.php" "${SITEDIR_PATH}/settings.local.php"
  ln -sf "${PROJECT_ROOT}/.docksal/etc/conf/development.services.yml" "${DOCROOT_PATH}/sites/development.services.yml"
}

circleci_install () {
  echo -e "${yellow} ${construction} Installing CircleCI tools. ${construction}${NC}"
  echo -e "${green}${divider}${NC}"
  curl -fLSs https://raw.githubusercontent.com/CircleCI-Public/circleci-cli/master/install.sh | sudo bash
}

ensure_utils () {
  echo -e "\n${yellow} ${construction} Ensure server utilities are installed. ${construction}${NC}"
  echo -e "${green}${divider}${NC}"
  sudo apt update
  sudo apt-get install jq -y
}

#-------------------------- END: Functions --------------------------------

#-------------------------- Execution --------------------------------

mkdir -p ~/tmp
chmod 755 ~/tmp
sudo localedef -i en_US -f UTF-8 en_US.UTF-8
sudo rm /etc/apt/sources.list.d/blackfire.list || true

# Project initialization steps
init_code
fix_permissions
init_settings
circleci_install
ensure_utils

# Complete
echo -e "\n${yellow} ${party} Site initialization complete!!! ${reverseparty}${NC}"
echo -e "${green}${divider}${NC}"

#-------------------------- END: Execution --------------------------------
